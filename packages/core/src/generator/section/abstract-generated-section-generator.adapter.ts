import { ReadableContent } from '../../reader/readable-content.js';
import { SectionGenerationPayload, SectionIdentifier } from './section-generator.adapter.js';

/**
 * Mixin type for Generated section generator.
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
type AbstractConstructor<T = object> = abstract new (...args: any[]) => T;

/**
 * Mixin for Generated section generator.
 * This section adds attribution to CI Dokumentor at the end of documentation.
 * The implementation is platform-agnostic.
 */
export function GeneratedSectionMixin<TManifest, TBase extends AbstractConstructor>(Base: TBase) {
  abstract class GeneratedSection extends Base {
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    constructor(...args: any[]) {
      super(...args);
    }

    getSectionIdentifier(): SectionIdentifier {
      return SectionIdentifier.Generated;
    }

    async generateSection({ formatterAdapter }: SectionGenerationPayload<TManifest>): Promise<ReadableContent> {
      const generatedText = 'This documentation was automatically generated by [CI Dokumentor](https://github.com/hoverkraft-tech/ci-dokumentor).';

      return formatterAdapter.horizontalRule().append(
        formatterAdapter.lineBreak(),
        formatterAdapter.paragraph(new ReadableContent(generatedText)),
      );
    }
  }

  return GeneratedSection;
}
