name: Common Continuous Integration tasks

on:
  workflow_call:
    inputs:
      sign-images:
        required: true
        type: boolean
    outputs:
      image-tag:
        description: The image tag for the CI Dokumentor CLI
        value: ${{ fromJson(jobs.docker.outputs.built-images).cli.tags[0] }}

permissions:
  actions: read
  contents: read
  packages: read
  security-events: write
  statuses: write
  id-token: write

jobs:
  linter:
    uses: hoverkraft-tech/ci-github-common/.github/workflows/linter.yml@b4883995e100e291a1fed68678d47a560328ed08 # 0.24.0
    with:
      linter-env: |
        FILTER_REGEX_EXCLUDE=dist/**/*
        VALIDATE_JSCPD=false
        VALIDATE_TYPESCRIPT_ES=false
        VALIDATE_TYPESCRIPT_PRETTIER=false
        VALIDATE_JAVASCRIPT_ES=false
        VALIDATE_TSX=false

  nodejs:
    uses: hoverkraft-tech/ci-github-nodejs/.github/workflows/continuous-integration.yml@1d00c9eb280acbee5df4b4a2087f786e66b13d87 # 0.14.1
    permissions:
      id-token: write
      security-events: write
      contents: read
    with:
      build: |
        {
          "commands": ["build"],
          "artifact": ["packages/docs/build"]
        }

  docker:
    needs: [linter, nodejs]
    uses: hoverkraft-tech/ci-github-container/.github/workflows/docker-build-images.yml@f9e149b6cdfa8443994994f10085691a57b8cf0e # 0.27.1
    permissions:
      contents: read
      issues: read
      packages: write
      pull-requests: read
      id-token: write
    secrets:
      oci-registry-password: ${{ secrets.GITHUB_TOKEN }}
    with:
      sign: ${{ inputs.sign-images }}
      images: |
        [
          {
            "name": "cli",
            "context": ".",
            "dockerfile": "docker/Dockerfile",
            "target": "production",
            "platforms": [
              "linux/amd64",
              "linux/arm64"
            ]
          }
        ]

  docker-test:
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - run: |
          docker run --rm "$IMAGE" --version
          docker run --rm "$IMAGE" --help
        env:
          IMAGE: ${{ fromJSON(needs.docker.outputs.built-images).cli.images[0] }}
