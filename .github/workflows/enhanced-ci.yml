name: Enhanced CI Error Reporting

on:
  workflow_call:
    inputs:
      enable-error-logging:
        description: 'Enable enhanced error logging'
        required: false
        default: 'true'
        type: string

jobs:
  test-with-enhanced-error-reporting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Enable Corepack
        run: corepack enable
        
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Build packages
        run: pnpm run build
        
      - name: Run tests with enhanced error reporting
        id: test-run
        run: |
          echo "::group::🧪 Running tests with enhanced error reporting"
          set +e  # Don't exit immediately on error
          pnpm run test:ci 2>&1 | tee test-output.log
          TEST_EXIT_CODE=$?
          echo "::endgroup::"
          
          # Save exit code for later use
          echo "TEST_EXIT_CODE=$TEST_EXIT_CODE" >> $GITHUB_ENV
          exit $TEST_EXIT_CODE
        continue-on-error: true
        
      - name: Analyze and Display Test Failures
        if: always()
        run: |
          echo "::group::📊 Enhanced Error Analysis"
          
          if [ "${{ steps.test-run.outcome }}" == "success" ]; then
            echo "✅ All tests passed successfully!"
          else
            echo "❌ Tests failed. Analyzing error details..."
            echo ""
            
            if [ -f test-output.log ]; then
              echo "📋 **Failed Test Summary:**"
              echo ""
              
              # Extract failed test information with better formatting
              echo "Failed tests found:"
              grep -E "FAIL|Failed Tests|❯.*failed|×.*failed" test-output.log || echo "No specific test failures found in standard format"
              echo ""
              
              # Extract and display specific error details
              echo "🔍 **Error Details:**"
              echo ""
              
              # Look for TypeErrors, ReferenceErrors, etc.
              if grep -q "TypeError\|ReferenceError\|SyntaxError\|Error:" test-output.log; then
                echo "Specific errors found:"
                grep -A 10 -B 2 "TypeError\|ReferenceError\|SyntaxError\|Error:" test-output.log | head -30
              else
                echo "No specific error types found"
              fi
              echo ""
              
              # Show stack trace information
              echo "📍 **Stack Trace:**"
              echo ""
              if grep -q "❯.*\.ts:\|❯.*\.js:" test-output.log; then
                echo "Stack trace locations:"
                grep -E "❯.*\.ts:|❯.*\.js:" test-output.log | head -10
              else
                echo "No stack trace information found"
              fi
              
              echo ""
              echo "📁 **Full Test Output (last 100 lines):**"
              echo ""
              tail -100 test-output.log
            else
              echo "⚠️ No test output captured"
            fi
          fi
          
          echo "::endgroup::"
          
      - name: Upload Detailed Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: enhanced-test-results
          path: |
            test-output.log
            packages/*/test-output/
          retention-days: 5
          
      - name: Create GitHub Test Summary
        if: always()
        run: |
          echo "# 🧪 Enhanced Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.test-run.outcome }}" == "success" ]; then
            echo "✅ **All tests passed successfully!**" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Tests failed with detailed error information**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            
            if [ -f test-output.log ]; then
              echo "## 📋 Failed Tests" >> $GITHUB_STEP_SUMMARY
              echo '```' >> $GITHUB_STEP_SUMMARY
              grep -E "FAIL|Failed Tests|❯.*failed|×.*failed" test-output.log | head -10 >> $GITHUB_STEP_SUMMARY || echo "No failed tests found in standard format" >> $GITHUB_STEP_SUMMARY
              echo '```' >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              
              echo "## 🔍 Error Details" >> $GITHUB_STEP_SUMMARY
              echo '```' >> $GITHUB_STEP_SUMMARY
              grep -A 10 -B 2 "TypeError\|ReferenceError\|SyntaxError\|Error:" test-output.log | head -30 >> $GITHUB_STEP_SUMMARY || echo "No specific error details found" >> $GITHUB_STEP_SUMMARY
              echo '```' >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              
              echo "## 📍 Stack Trace" >> $GITHUB_STEP_SUMMARY
              echo '```' >> $GITHUB_STEP_SUMMARY
              grep -E "❯.*\.ts:|❯.*\.js:" test-output.log | head -10 >> $GITHUB_STEP_SUMMARY || echo "No stack trace found" >> $GITHUB_STEP_SUMMARY
              echo '```' >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              
              echo "## 📄 Full Test Output (last 50 lines)" >> $GITHUB_STEP_SUMMARY
              echo '```' >> $GITHUB_STEP_SUMMARY
              tail -50 test-output.log >> $GITHUB_STEP_SUMMARY
              echo '```' >> $GITHUB_STEP_SUMMARY
            fi
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 📊 Test Statistics" >> $GITHUB_STEP_SUMMARY
          echo "- Build Status: ${{ steps.test-run.outcome }}" >> $GITHUB_STEP_SUMMARY
          echo "- Enhanced Error Reporting: ${{ inputs.enable-error-logging }}" >> $GITHUB_STEP_SUMMARY
          echo "- Timestamp: $(date)" >> $GITHUB_STEP_SUMMARY
          
      - name: Fail job if tests failed
        if: steps.test-run.outcome == 'failure'
        run: |
          echo "::error::Tests failed with detailed error information shown above"
          exit 1