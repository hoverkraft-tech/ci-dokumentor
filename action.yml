name: CI Dokumentor
description: Automatically generate documentation for CI/CD components like GitHub Actions and workflows
author: hoverkraft
branding:
  icon: book-open
  color: blue

inputs:
  source:
    description: Source manifest file path to handle (e.g. `action.yml`, `.github/workflows/ci.yml`).
    required: true
  destination:
    description: Destination path for generated documentation (optional; destination is auto-detected if not specified by the adapter).
    required: false
  repository:
    description: Repository platform (auto-detected if not specified).
    required: false
  cicd:
    description: CI/CD platform (github-actions, gitlab-ci, etc.).
    required: false
  include-sections:
    description: Comma-separated list of sections to include.
    required: false
  exclude-sections:
    description: Comma-separated list of sections to exclude.
    required: false
  version:
    description: Version of CI Dokumentor to use. See <https://github.com/hoverkraft-tech/ci-dokumentor/releases>.
    required: false
    default: latest
  github-token:
    description: The GitHub token used to fetch repository information.
    default: ${{ github.token }}
    required: false

outputs:
  destination:
    description: Destination path for generated documentation.
    value: ${{ steps.generate.outputs.destination }}

runs:
  using: composite
  steps:
    - id: generate
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
      run: |
        source="${{ inputs.source }}"
        echo "::debug::Source path set to: $source"
        envs="-e GITHUB_OUTPUT"
        args="generate --output-format "github-action" --source "$source""

        destination="${{ inputs.destination }}"
        if [ -n "$destination" ]; then
          args="$args --destination "$destination""
          echo "::debug::Destination path set to: $destination"
        fi

        repository="${{ inputs.repository }}"
        if [ -n "$repository" ]; then
          args="$args --repository "$repository""
          echo "::debug::Repository set to: $repository"
        fi

        cicd="${{ inputs.cicd }}"
        if [ -n "$cicd" ]; then
          args="$args --cicd "$cicd""
          echo "::debug::CI/CD set to: $cicd"
        fi

        include_sections="${{ inputs.include_sections }}"
        if [ -n "$include_sections" ]; then
          args="$args --include-sections "$include_sections""
          echo "::debug::Include sections set to: $include_sections"
        fi

        exclude_sections="${{ inputs.exclude_sections }}"
        if [ -n "$exclude_sections" ]; then
          args="$args --exclude-sections "$exclude_sections""
          echo "::debug::Exclude sections set to: $exclude_sections"
        fi

        echo "::debug::Args set to: $args"

        if [ -n "$GITHUB_TOKEN" ]; then
          envs="$envs -e GITHUB_TOKEN"
          echo "::debug::GitHub token provided"
        fi

        echo "::debug::Env args set to: $envs"

        version="${{ inputs.version }}"
        echo "::debug::Version set to: $version"

        docker run --rm \
          -v "$GITHUB_WORKSPACE:$GITHUB_WORKSPACE" \
          -v "$GITHUB_OUTPUT:$GITHUB_OUTPUT" \
          -u "$(id -u):$(id -g)" \
          -w "$GITHUB_WORKSPACE" \
          $envs \
          ghcr.io/hoverkraft-tech/ci-dokumentor/cli:$version \
          $args
